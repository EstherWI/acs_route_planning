<?xml version="1.0"?>
<launch>

	<arg name="pkg_gazebo_worlds" default="$(find p3at_tutorial)" />

	<env name="GAZEBO_MODEL_PATH" value="$(find map2gazebo)/models:$(optenv GAZEBO_MODEL_PATH)" />

	<!--args
	for tuw_multi_graph-->
	<arg name="launch_map_server" default="true" />
	<arg name="launch_graph_generator" default="true" />
	<arg name="load_segments" default="false" />


	<!-- start map server publishing a image of the map-->
	<group if="$(arg launch_map_server)">
		<include file="$(find tuw_multi_robot_demo)/launch/map_server.launch">
			<arg name="room" value="$(arg room)" />
		</include>
	</group>

	<!-- generate voronoi graph-->
	<group if="$(arg launch_graph_generator)">
		<group if="$(arg load_segments)">
			<include file="$(find tuw_multi_robot_demo)/launch/graph_generator.launch">
				<arg name="cfg" value="$(arg room)" />
				<arg name="custom_graph_path"
					value="$(find tuw_multi_robot_demo)/cfg/graph/$(arg room)/cache/$(arg map_name)" />
			</include>
		</group>
		<group unless="$(arg load_segments)">
			<include file="$(find tuw_multi_robot_demo)/launch/graph_generator.launch">
				<arg name="cfg" value="$(arg room)" />
			</include>
		</group>
	</group>

	<arg name="debug" default="false" />
	<arg name="gui" default="true" />
	<arg name="headless" default="false" />
	<arg name="map" default="map1.world" />

	<!-- Start Gazebo with a blank world -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="debug" value="$(arg debug)" />
		<arg name="gui" value="$(arg gui)" />
		<arg name="paused" value="false" />
		<arg name="use_sim_time" value="true" />
		<arg name="headless" value="$(arg headless)" />
		<arg name="world_name" value="$(find acs_route_planning)/worlds/$(arg map)" />
	</include>

	<include file="$(find p3at_tutorial)/launch/upload_pioneer3at.xml" />
	<arg name="x" default="-5.9" />
	<arg name="y" default="-7.24" />
	<arg name="z" default="0" />

	<!-- push robot_description to factory and spawn robot in gazebo -->
	<node name="spawn_pioneer" pkg="gazebo_ros" type="spawn_model"
		args="-urdf -param robot_description -model Pioneer3at -x $(arg x) -y $(arg y) -z $(arg z)"
		respawn="false" output="screen" />

	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" /> 

	<!-- run a node with acs algorithm-->
	<include file="$(find acs_route_planning)/launch/acs_run.launch" />

</launch>